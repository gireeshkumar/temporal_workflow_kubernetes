/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.gk.workflow.string.client
import io.gk.workflow.string.intf.StringActionsWorkflow
import io.temporal.client.WorkflowClient
import io.temporal.client.WorkflowOptions
import io.temporal.client.WorkflowStub
import io.temporal.serviceclient.WorkflowServiceStubs
import kotlin.random.Random

private val seedData = arrayOf(
    "The quick fox",
    "Jumped over fence",
    "Bright sunny day",
    "Wind blew softly",
    "Rain falls gently",
    "Snow covers ground",
    "Flowers bloom beautifully",
    "Leaves fall slowly",
    "Sun sets gracefully",
    "Stars shine bright",
    "Moon lights night",
    "Birds chirp loudly",
    "Rivers flow smoothly",
    "Fish swim freely",
    "Cats purr contently",
    "Dogs bark loudly",
    "Horses gallop fast",
    "Bears hibernate deeply",
    "Owls hoot nightly",
    "Turtles move slowly",
    "Butterflies flutter around",
    "Frogs croak often",
    "Trees sway gently",
    "Mountains stand tall",
    "Valleys stretch wide"
)

fun main() {
    val service: WorkflowServiceStubs = WorkflowServiceStubs.newLocalServiceStubs()
    val client: WorkflowClient = WorkflowClient.newInstance(service)
    val options: WorkflowOptions = WorkflowOptions.newBuilder()
        .setWorkflowId("string-actions-wf")
        .setTaskQueue("string-action-q")
        .build()
    val workflow: StringActionsWorkflow = client.newWorkflowStub(StringActionsWorkflow::class.java, options)

    val stringval: String = seedData[Random.nextInt(seedData.size)]
    val result: Array<String> = workflow.transform(stringval, "async")

    val workflowId: String = WorkflowStub.fromTyped<Any>(workflow).execution.workflowId
    println("[ $workflowId ] : $stringval => ${result.contentToString()}")
}

